"use strict";angular.module("d3",[]).factory("d3Service",["$document","$q","$rootScope",function(t,e,a){function r(){a.$apply(function(){n.resolve(window.d3)})}var n=e.defer(),o=t[0].createElement("script");o.type="text/javascript",o.async=!0,o.src="http://d3js.org/d3.v4.min.js",o.onreadystatechange=function(){"complete"==this.readyState&&r()},o.onload=r;var i=t[0].getElementsByTagName("body")[0];return i.appendChild(o),{d3:function(){return n.promise}}}]),angular.module("app",["d3"]),angular.module("app").service("StockService",["$http","$q",function(t,e){var a="http://query.yahooapis.com/v1/public/yql?q=",r="&format=json&diagnostics=true&env=http://datatables.org/alltables.env";return{getCompanyDate:function(n){var o=a+encodeURI("select * from yahoo.finance.historicaldata where symbol in('"+n+"')and startDate = '2016-01-01' and endDate = '2016-06-30'")+r,i=e.defer();return t.get(o).then(function(t){var e=angular.fromJson(t.data.query.results);i.resolve(e)},function(t){i.reject({message:"Problem with connection"})}),i.promise}}}]),angular.module("app").controller("myController",["StockService",function(t){var e=this,a=[],r={};e.companiesNames=["CSCO","MSFT","ADBE"],e.showCompany=function(n){return r[n]?void(e.company=r[n]):(r[n]=[],void t.getCompanyDate(n).then(function(t){var o=t.quote;angular.forEach(o,function(t){t.Date=new Date(t.Date.split("-").join(",")),r[n].push(t),e.companyNames=a,e.company=r[n]})},function(t){alert(t.message)}))}}]),angular.module("app").directive("chart",["d3Service",function(t){function e(e,a){t.d3().then(function(t){e.$watch("item",function(e){function r(){if(!t.event.sourceEvent||"zoom"!==t.event.sourceEvent.type){var e=t.event.selection;m.domain(e.map(f.invert,f)),S.select(".area").attr("d",A),S.selectAll(".dot").attr("cx",function(t){return m(t.Date)}).attr("cy",function(t){return g(t.Close)}),S.select(".axis--x").call(x),h.domain();var a=e.map(f.invert,f);h.domain(o.map(function(t){if(a[0]<=t.Date&&t.Date<=a[1])return t.Date})),q.selectAll("rect").attr("x",function(t){if(a[0]<=t.Date&&t.Date<=a[1])return h(t.Date)}).attr("y",function(t){if(a[0]<=t.Date&&t.Date<=a[1])return y(t.High)}).attr("date",function(t){if(a[0]<=t.Date&&t.Date<=a[1])return t.Date}).attr("height",function(t){if(y(t.High),y(t.Low),a[0]<=t.Date&&t.Date<=a[1])return y(t.Low)-y(t.High)}).attr("width",h.bandwidth()),q.select(".axis--x").call(b).selectAll("text").text(function(e){if(e){var a=t.timeFormat("%m-%d");return a(e)}}).style("text-anchor","end").attr("dx","-.8em").attr("dy","-.55em").attr("transform","rotate(-90)")}}if(e){var n;t.select("#ID").remove();var o=angular.copy(e).reverse(),i={top:20,right:20,bottom:410,left:50},c={top:430,right:20,bottom:330,left:50},s={top:500,right:20,bottom:40,left:50},l=1200-i.left-i.right,d=800-i.top-i.bottom,p=800-c.top-c.bottom,u=800-s.top-s.bottom,m=t.scaleTime().range([0,l]),f=t.scaleTime().range([0,l]),h=t.scaleBand().rangeRound([0,l]).padding(.1).align(.1),g=t.scaleLinear().range([d,0]),v=t.scaleLinear().range([p,0]),y=t.scaleLinear().range([u,0]),x=t.axisBottom(m),D=t.axisBottom(f),b=t.axisBottom(h).tickFormat(t.timeFormat("%m-%d")),w=t.axisLeft(g),C=t.axisLeft(y),L=t.brushX().extent([[0,0],[l,p]]).on("brush",r);n=t.select(a[0]).append("svg").attr("id","ID").attr("width",l+i.left+i.right).attr("height",d+i.top+i.bottom),n.append("defs").append("clipPath").attr("id","clip").append("rect").attr("width",l).attr("height",d);var S=n.append("g").attr("class","focus").attr("transform","translate("+i.left+","+i.top+")"),H=n.append("g").attr("class","context").attr("transform","translate("+c.left+","+c.top+")"),q=n.append("g").attr("class","freg").attr("transform","translate("+s.left+","+s.top+")");m.domain(t.extent(o,function(t){return t.Date})),g.domain([t.min(o,function(t){return t.Low}),t.max(o,function(t){return t.High})]),f.domain(m.domain()),v.domain(g.domain()),h.domain(o.map(function(t){return t.Date})),y.domain(g.domain());var A=t.area().curve(t.curveMonotoneX).x(function(t){return m(t.Date)}).y0(d).y1(function(t){return g(t.Close)});S.append("path").data([o]).attr("class","area").attr("d",A);var B=S.append("g");B.attr("clip-path","url(#clip)"),B.selectAll("dot").data(o).enter().append("circle").attr("class","dot").attr("r",3).style("opacity",.5).attr("cx",function(t){return m(t.Date)}).attr("cy",function(t){return g(t.Close)}).on("mouseover",function(e){t.select(this).attr("r",7);var a=t.timeFormat("%e %B");E.html("<table><tr><td>Date</td><td>"+a(e.Date)+"</td></tr><tr><td>Open</td><td>"+e.Open+"</td></tr><tr><td>Close</td><td>"+e.Close+"</td></tr><tr><td>High</td><td>"+e.High+"</td></tr><tr><td>Low</td><td>"+e.Low+"</td></tr><tr><td>Volume</td><td>"+e.Volume+"</td></tr></table>").style("left",t.event.pageX+"px").style("top",t.event.pageY-parseInt(E.style("height"),10)+"px").transition().duration(200).style("opacity",.9)}).on("mouseout",function(e){t.select(this).attr("r",3),E.transition().duration(500).style("opacity",0)}),S.append("g").attr("class","axis axis--x").attr("fill","none").attr("transform","translate(0,"+d+")").call(x),S.append("g").attr("class","axis axis--y").call(w),S.append("text").attr("transform","rotate(-90)").attr("y",0-i.left).attr("x",0-d/2).attr("dy","1em").style("text-anchor","middle").text("Price"),n.append("text").attr("transform","translate("+(l+i.right+i.left)/2+" ,"+s.top+")").style("text-anchor","middle").text("Date");var E=t.select(a[0]).append("div").attr("class","tooltip").style("opacity",0);H.append("g").attr("class","axis axis--x").attr("transform","translate(0,"+p+")").call(D),H.append("g").attr("class","brush").call(L).call(L.move,m.range());var $=t.area().curve(t.curveMonotoneX).x(function(t){return f(t.Date)}).y0(p).y1(function(t){return v(t.Close)});H.append("path").datum(o).attr("class","area").attr("d",$),q.append("g").attr("class","axis axis--x").attr("transform","translate(0,"+u+")").call(b).selectAll("text").style("text-anchor","end").attr("dx","-.8em").attr("dy","-.55em").attr("transform","rotate(-90)"),q.append("g").attr("class","axis axis--y").call(C);q.selectAll("rect").data(o).enter().append("rect").attr("class","bar").attr("x",function(t){return h(t.Date)}).attr("y",function(t){return y(t.High)}).attr("height",function(t){return y(t.High),y(t.Low),y(t.Low)-y(t.High)}).attr("width",h.bandwidth())}})})}return{restrict:"E",scope:{item:"<?ngModel"},link:e}}]);
//# sourceMappingURL=data:application/json;base64,
